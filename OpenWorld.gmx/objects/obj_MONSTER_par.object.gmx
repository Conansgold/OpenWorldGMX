<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Setup all of the stats for a monster!


hp = 10 //Hitpoints
name=""
starthp=hp
accspeed=25 //Delay Between Attacks
alarm[4]=accspeed
meleeattackdistance=128 //How far it attacks
rangeattackdistance=512
magicattackdistance=512
meleesprite=spr_melee_slash
rangesprite=spr_arrow
magicsprite=spr_fire_ball
meleestr = 2 //Strength Levels
rangestr = 2
magestr = 2
meleedef = 1 //Defence Levels
rangedef = 1
magedef = 1
type = 1 //1 - Melee 2 - Ranged 3 - Magic
movespeed = 2 //How fast it moves
image_speed = 0
alarm[2]=300 //Health Rate
delayamount = 120
delay = floor(random(delayamount))
movetime = 0
moveamount = 120
canbehit = true
dead=false
fullydead=false
drop1=901 //Drops
drop2=925
drop3=0
drop4=0
drop5=0
mad=false
spawner = obj_chicken_spawn
spriteheight=64
tame = false
startx=x
starty=y
totallv=floor((((meleestr+rangestr+magestr)/3))+(((meleedef+rangedef+magedef)/3)))
showinfo=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[4]=accspeed //Attacking
if tame=false
{
if distance_to_object(obj_player) &lt; distance_to_object(obj_tame_target) {madenemy=obj_player} else {madenemy=instance_nearest(x,y,obj_tame_target)} //Are you close enough to the player?
if distance_to_object(madenemy)&lt;meleeattackdistance and dead = false and type = 1 and mad =true //Ya!
    {
    attack=instance_create(x,y,obj_attack) //Attack!
    attack.damage=floor(random(meleestr)) //This is for melee attacks
    attack.type=type
    attack.creator=self
    attack.target=madenemy
    attack.sprite_index=meleesprite
    if image_index=0
        {
        attack.image_angle=0
        attack.movespeed=movespeed*2 //Melee people move faster.
        }
    if image_index=1
        {
        attack.image_angle=90
        attack.movespeed=movespeed*2
        }
    if image_index=2
        {
        attack.image_angle=180
        attack.movespeed=movespeed*2
        }
    if image_index=3
        {
        attack.image_angle=270
        attack.movespeed=movespeed*2
        }
    }
    
if distance_to_object(madenemy)&lt;rangeattackdistance and mad = true and dead = false and type = 2 //Ranged attacks
    {
    attack=instance_create(x,y-sprite_height/2,obj_monster_range_attack)
    attack.damage=floor(random(rangestr))
    attack.type=type
    attack.creator=self
    attack.target=madenemy
    attack.sprite_index=rangesprite
    }
    
if distance_to_object(madenemy)&lt;magicattackdistance and mad = true and dead = false and type = 3 //Magic attacks
    {
    attack=instance_create(x,y-sprite_height/2,obj_monster_mage_attack)
    attack.damage=floor(random(magestr))
    attack.type=type
    attack.creator=self
    attack.target=madenemy
    attack.sprite_index=magicsprite
    }
}
else
{
if tame=true //Taming!
{
attackenemy=instance_nearest(x,y,obj_target)
if distance_to_object(attackenemy)&lt;meleeattackdistance and dead = false and type = 1 //Am I tame? Attack a target!
    {
    attack=instance_create(x,y,obj_tame_melee)
    attack.damage=floor(random(meleestr))
    attack.type=type
    attack.creator=self
    attack.target=attackenemy
    attack.sprite_index=meleesprite
    if image_index=0
        {
        attack.image_angle=0
        attack.movespeed=movespeed*2
        }
    if image_index=1
        {
        attack.image_angle=90
        attack.movespeed=movespeed*2
        }
    if image_index=2
        {
        attack.image_angle=180
        attack.movespeed=movespeed*2
        }
    if image_index=3
        {
        attack.image_angle=270
        attack.movespeed=movespeed*2
        }
    }
    
if distance_to_object(attackenemy)&lt;rangeattackdistance and dead = false and type = 2 //All the same stuff as before.
    {
    attack=instance_create(x,y-sprite_height/2,obj_tame_range)
    attack.damage=floor(random(rangestr))
    attack.type=type
    attack.creator=self
    attack.target=attackenemy
    attack.sprite_index=rangesprite
    }
    
if distance_to_object(attackenemy)&lt;magicattackdistance and dead = false and type = 3
    {
    attack=instance_create(x,y-sprite_height/2,obj_tame_mage)
    attack.damage=floor(random(magestr))
    attack.type=type
    attack.creator=self
    attack.target=attackenemy
    attack.sprite_index=magicsprite
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_object(obj_player)&gt;256 //Unagro
    {
    mad = false
    vspeed=0
    hspeed=0
    }
alarm[3]=300
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; starthp //Gain back HP
    {
    hp+=1
    }
alarm[2]=300
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canbehit = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y

if distance_to_point(mouse_x,mouse_y)&lt;64 //show info
    {
    showinfo=true
    }
else
    {
    showinfo=false
    }

if tame = false
{
//Delay Clock
if movetime = 0
    {
    if delay &gt; 0
        {
        delay -= 1
        }
    if delay = 0
        {
        movetime = moveamount
        }
    hspeed = 0
    vspeed = 0
    }
    
//Movement Clock Normal Move
if delay = 0
    {
    if movetime = moveamount
        {
        movedirection = floor(random(4))
        if movedirection = 0
            {
            vspeed = movespeed
            hspeed = 0
            }
        if movedirection = 1
            {
            hspeed = movespeed
            vspeed = 0
            }
        if movedirection = 2
            {
            vspeed = -movespeed
            hspeed = 0
            }
        if movedirection = 3
            {
            hspeed = -movespeed
            vspeed = 0
            }
        if mad = false
            {
            image_index = movedirection
            }
        movetime -= 1
        }
    if movetime &gt; 0
        {
        movetime -= 1
        }
    if movetime = 0
        {
        delay = floor(random(delayamount))
        }
    }

//Collision
if !place_free(x+hspeed,y+vspeed)
    {
    hspeed = 0
    vspeed = 0
    }

if mad = true and dead = false //Mad
    {
    if distance_to_object(obj_player) &lt; distance_to_object(obj_tame_target) {madenemy=obj_player} else {madenemy=instance_nearest(x,y,obj_tame_target)}
    if distance_to_object(madenemy) &gt; 32
        {
        action_potential_step(madenemy.x,madenemy.y,movespeed,0)
        }
    else
        {
        vspeed=0
        hspeed=0
        }
    angle = floor(point_direction(x,y,madenemy.x,madenemy.y)) 
    if angle &gt;= 45 and angle &lt; 135
    image_index = 2
    if angle &gt;= 135 and angle &lt; 225
    image_index = 3
    if angle &gt;= 225 and angle &lt; 315
    image_index = 0
    if angle &gt;= 315 and angle &lt; 405
    image_index = 1
    }
}
else
    {
    mad=false//Tamed
    if instance_number(obj_target)=0
    {
    if distance_to_object(obj_player) &gt; 64
        {
        action_potential_step(obj_player.x,obj_player.y,movespeed,0)
        }
    else
        {
        vspeed=0
        hspeed=0
        }
    angle = floor(point_direction(x,y,obj_player.x,obj_player.y)) 
    if angle &gt;= 45 and angle &lt; 135
    image_index = 2
    if angle &gt;= 135 and angle &lt; 225
    image_index = 3
    if angle &gt;= 225 and angle &lt; 315
    image_index = 0
    if angle &gt;= 315 and angle &lt; 405
    image_index = 1
    }
else
    {
    enemy=instance_nearest(x,y,obj_target)
    if distance_to_object(enemy) &gt; 64
        {
        action_potential_step(enemy.x,enemy.y,movespeed,0)
        }
    else
        {
        vspeed=0
        hspeed=0
        }
    angle = floor(point_direction(x,y,enemy.x,enemy.y)) 
    if angle &gt;= 45 and angle &lt; 135
    image_index = 2
    if angle &gt;= 135 and angle &lt; 225
    image_index = 3
    if angle &gt;= 225 and angle &lt; 315
    image_index = 0
    if angle &gt;= 315 and angle &lt; 405
    image_index = 1
    }
    }

   
if hp &lt;= 0 or dead = true
    {
    dead=true
    hspeed=0
    vspeed=0
    if fullydead=false
        {
        if floor(random(2))=0   
            {   
            image_index=0
            fullydead=true
            }
        else
            {
            image_index=2
            fullydead=true
            }
        if floor(random(2))=0
            {
            image_angle=270
            }
        else
            {
            image_angle=90
            }
        }
    image_alpha-=0.025
    }
if image_alpha=0 //Death
    {
    randomx = floor(random(65))-32 randomy = floor(random(65))-32 item1=instance_create(x+randomx-16,y+randomy-16,obj_ground_item)
    item1.itemid=drop1
    if floor(random(2))=0
        {
        randomx = floor(random(65))-32 randomy = floor(random(65))-32 item2=instance_create(x+randomx-16,y+randomy-16,obj_ground_item)
        item2.itemid=drop2
        }
    if floor(random(10))=0
        {
        randomx = floor(random(65))-32 randomy = floor(random(65))-32 item3=instance_create(x+randomx-16,y+randomy-16,obj_ground_item)
        item3.itemid=drop3
        }
    if floor(random(100))=0
        {
        randomx = floor(random(65))-32 randomy = floor(random(65))-32 item4=instance_create(x+randomx-16,y+randomy-16,obj_ground_item)
        item4.itemid=drop4
        }
    if floor(random(1000))=0
        {
        randomx = floor(random(65))-32 randomy = floor(random(65))-32 item5=instance_create(x+randomx-16,y+randomy-16,obj_ground_item)
        item5.itemid=drop5
        }
    spawner = instance_create(startx,starty,obj_spawner)
    spawner.monster = object_index
    instance_destroy()
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tame_mage">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=false //Take damage
    {
    damage=other.damage-floor(random(magedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    global.tamexp-=damage
    hp-=damage
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster_mage_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=true //Take damage
    {
    damage=other.damage-floor(random(magedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tame_range">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=false //Take damage
    {
    damage=other.damage-floor(random(rangedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    global.tamexp-=damage
    hp-=damage 
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster_range_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=true //Take damage
    {
    damage=other.damage-floor(random(rangedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage 
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_tame_melee">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=false //Take damage
    {
    damage=other.damage-floor(random(meleedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    global.tamexp-=damage
    hp-=damage   
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=true //Take damage
    {
    damage=other.damage-floor(random(meleedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage   
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    if tame=false mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mage_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame = false and other.sprite_index!=spr_tame_spell //take damage
    {
    damage=other.damage-floor(random(magedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage
    global.hpxp-=damage*2
    if global.attackxp = 1
        {
        global.accxp-=damage*3
        }
    if global.attackxp = 2
        {
        global.strxp-=damage*3
        }
    if global.attackxp = 3
        {
        global.defxp-=damage*3
        }    
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }

if other.sprite_index=spr_tame_spell and dead = false and canbehit=true and mad = false and tame = false
    {
    alarm[1]=15
    if global.tamelv&gt;=totallv
        {
        if floor(random(10-(global.tamelv/10)))=0
            {
            scr_addmessage("You tame the "+string(name)+".",c_black)
            tame=true
            instance_create(x,y,obj_tame_target)
            global.tamexp-=totallv*5
            }
        else
            {
            if floor(random(10))=0
                {
                scr_addmessage("You fail to tame the "+string(name)+" and make it mad.",c_black)
                mad = true
                if distance_to_object(obj_target)&gt;2
                instance_create(x,y,obj_target)
                alarm[3]=300
                }
            else
                {
                scr_addmessage("You fail to tame the "+string(name)+".",c_black)
                }
            }
        }
    else
        {
        scr_addmessage("You need a Taming level of "+string(totallv)+" to tame a "+string(name)+".",c_black)
        }
    with (other) instance_destroy()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_range_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame = false //Take damage
    {
    damage=other.damage-floor(random(rangedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage
    global.hpxp-=damage*2
    if global.attackxp = 1
        {
        global.accxp-=damage*3
        }
    if global.attackxp = 2
        {
        global.strxp-=damage*3
        }
    if global.attackxp = 3
        {
        global.defxp-=damage*3
        }    
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_melee_attack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canbehit=true and dead=false and tame=false //Take damage
    {
    damage=other.damage-floor(random(meleedef))
    if damage&lt;0 damage=0
    if damage&gt;hp damage=hp
    hitsplat = instance_create(x,y-32,obj_hit)
    hitsplat.amount=damage
    hp-=damage
    global.hpxp-=damage*2
    if global.attackxp = 1
        {
        global.accxp-=damage*3
        }
    if global.attackxp = 2
        {
        global.strxp-=damage*3
        }
    if global.attackxp = 3
        {
        global.defxp-=damage*3
        }    
    canbehit=false
    alarm[0] = 30
    alarm[1] = 15
    mad=true
    if distance_to_object(obj_target)&gt;2
    instance_create(x,y,obj_target)
    alarm[3]=300
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="41">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(self)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mad = true //Draw all my stuff.
    {
    draw_sprite(spr_red_circle,0,x,y)

    }
if mad = true or showinfo = true
    {
    if mad = true
    draw_text_color(x,y-spriteheight-20,string(name)+" - Lv "+string(totallv),c_red,c_red,c_red,c_red,1)
    if tame = true
    draw_text_color(x,y-spriteheight-20,string(name)+" - Lv "+string(totallv),c_green,c_green,c_green,c_green,1)
    if tame = false and mad = false
    draw_text_color(x,y-spriteheight-20,string(name)+" - Lv "+string(totallv),c_black,c_black,c_black,c_black,1)
    draw_healthbar(x-16,y-spriteheight,x+16,y+4-spriteheight,hp/starthp*100,255,65280,65280,0,1,1);
    }
if tame = true
    {
    draw_sprite(spr_green_circle,0,x,y)
    }
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
